# GitHub Actions Workflow for ESP32-C3 Bluetooth Headset

name: PlatformIO CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        board: [esp32-c3-devkitm-1]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    
    - name: Build firmware
      run: pio run -e esp32-c3-supermini
    
    - name: Run tests
      run: pio test -e esp32-c3-supermini --verbose
      continue-on-error: true  # Allow tests to fail without stopping build
    
    - name: Check code style
      run: |
        # Install clang-format if not available
        sudo apt-get update
        sudo apt-get install -y clang-format
        # Check code style (allow failure for now)
        find src/ -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true
      continue-on-error: true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ matrix.board }}
        path: .pio/build/*/firmware.bin
        retention-days: 30
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: firmware-esp32-c3-devkitm-1
        path: ./release
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
